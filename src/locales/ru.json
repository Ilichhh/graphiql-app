{
  "header": {
    "signIn": "Войти",
    "signUp": "Зарегистрироваться",
    "signOut": "Выйти",
    "toMain": "На главную"
  },
  "form": {
    "register": {
      "header": "Регистрация в GraphiQL",
      "submit": "Зарегистрироваться",
      "redirect": "Войти"
    },
    "login": {
      "header": "Вход в GraphiQL",
      "submit": "Войти",
      "redirect": "Зарегистрироваться"
    },
    "emailInput": "Введите почту",
    "passwordInput": "Введите пароль",
    "passwordInputConfirm": "Подтвердите пароль",
    "wrongPassword": "Неверный пароль",
    "userNotFound": "Пользователь с таким адресом электронной почты не найден. Пожалуйста, проверьте свою почту или зарегистрируйтесь для создания новой учетной записи",
    "emptyEmail": "Пожалуйста, введите адрес электронной почты",
    "invalidEmail": "Неверный адрес электронной почты",
    "emptyPassword": "Пожалуйста, введите пароль",
    "simplePassword": "Пароль должен содержать не менее 8 символов и включать хотя бы одну букву, одну цифру и один специальный символ",
    "emptyPasswordConfirm": "Пожалуйста, подтвердите пароль",
    "wrongPasswordConfirm": "Пароли не совпадают",
    "emailInUse": "Указанный адрес электронной почты уже зарегистрирован. Пожалуйста, используйте другой адрес или выполните вход",
    "divider": "или"
  },
  "playground": {
    "responsePlaceholder": "Нажми на кнопку Play, чтоб получить ответ здесь",
    "variablesTabHeader": "Переменные запроса",
    "headersTabHeader": "HTTP Заголовки",
    "endpointPlaceholder": "Введите URL-адрес конечной точки...",
    "endpointSubmit": "Начать",
    "chooseEndpoint": "или выберите из предложенных",
    "operation": "Запрос",
    "response": "Ответ",
    "playBtn": "Старт",
    "schemaError": "Не удалось получить schema. Пожалуйста, проверьте соединение",
    "paramsError": "Пожалуйста, введите верные параметры",
    "saveOperation": "Сохранить запрос",
    "cancel": "Отмена",
    "prettify": "Форматировать",
    "expand": "Раскрыть",
    "collapse": "Свернуть",
    "renameQuery": "Переименовать запрос",
    "deleteQuery": "Удалить",
    "queriesCollection": "Коллекция запросов",
    "runHistory": "История запросов",
    "emptyCollectionMessage": "У вас нет сохраненных запросов. Сохраните запрос, чтобы увидеть его в коллекции.",
    "emptyHistoryMessage": "История запросов пуста.",
    "unnamedQuery": "(без имени)",
    "newTab": "Новая вкладка",
    "clearHistory": "Очистить историю",
    "modal": {
      "save": {
        "header": "Сохранить запрос",
        "title": "Имя запроса",
        "submit": "Сохранить"
      },
      "rename": {
        "header": "Переименовать запрос",
        "title": "Имя запроса",
        "submit": "Переименовать"
      },
      "delete": {
        "header": "Удалить запрос",
        "title": "Вы уверены, что хотите удалить запрос {{name}}?",
        "submit": "Удалить"
      },
      "clearHistory": {
        "header": "Очистить историю запросов",
        "title": "Вы уверены, что хотите очистить всю историю запусков? Это действие нельзя отменить.",
        "submit": "Очистить историю"
      }
    }
  },
  "landing": {
    "hero": {
      "title": "GraphQL IDE",
      "subtitle": "удобный способ работать с GraphQL-запросами"
    },
    "explore": {
      "title": "Узнай, как работать с приложением",
      "subtitle": "Краткое видео о том, как использовать приложение"
    },
    "team": {
      "title": "Познакомься с командой"
    }
  },
  "developers": {
    "ilya": {
      "firstName": "Илья",
      "secondName": "Шакуров",
      "role": "Тим лид",
      "info": "Настроил окружение для начала работы.\nРеализовал авторизацию с приватным роутингом, хэдер с навигацией и переключением языков.\nСверстал страницу формы регистрации / логина с валидацией.\nСделал функционал секции переменных и заголовков.\nДобавил модальное окно при первом входе в приложение с возможность выбора эндпоинта.\nНастроил базу данных firebase и реализовал сайдбар с возможностью сохранения истории запросов. А так же сохранение и редактирование шаблонов запросов.\nПрививал демократические принципы внутри команды, временами игнорируя создание / редактирование задач на доске."
    },
    "artyom": {
      "firstName": "Артём",
      "secondName": "Багаев",
      "role": "Фронтенд разработчик",
      "info": "Сверстал лендинг c применением принципов responsive design. С помощью библиотеки codemirror cделал редакторы запросов, пременных / заголовков и окно ответа, c подсветкой синтаксиса и автокомплитом. Настроил Redux для управления состояниями и RTK Query для получения данных. Был ответственным за обработку ошибок, настроил error boundaries, сделал вывод ошибок в виде всплывающих уведомлений. Повесил prettier на кнопку 'Форматировать', чтобы можно было делать красиво. Один раз запушил напрямую в 'develop'."
    },
    "alena": {
      "firstName": "Алёна",
      "secondName": "Девятова",
      "role": "Фронтенд разработчик",
      "info": "Работала с логикой для получения схемы GraphQL через запрос к интроспекции. Отвечала за создание удобной секции документации, поддерживающей различные API; добавила функционал поиска внутри документации. В редакторе запросов внедрила возможность переключения вкладок с дефолтными запросами. Реализовала сохранение состояния приложения в локальном хранилище. Внесла вклад в дизайн и верстку страниц приложения. Веселый факт: обожает гифки с котиками настолько, что даже заставила своих коллег реагировать на них в чате! Спойлер: они не разделяли такую страсть, ха-ха!"
    }
  },
  "404": {
    "header": "Похоже, ты потерялся",
    "toHome": "Домой"
  },
  "global": {
    "sessionError": "Ваша сессия истекла. Пожалуйста, авторизуйтесь снова.",
    "errorBoundaryMessage": "Что-то пошло не так. Попробуйте перезагрузить страницу."
  },
  "sidebar": {
    "fetchTemplatesError": "Не удалось получить сохраненные шаблоны запросов",
    "deleteTemplateError": "Не удалось удалить шаблон запроса",
    "renameTemplateError": "Не удалось переименовать шаблон запроса",
    "saveTemplateError": "Не удалось сохранить шаблон запроса",
    "fetchHistoryError": "Не удалось получить историю запросов",
    "saveHistoryError": "Не удалось сохранить историю запросов",
    "clearHistoryError": "Не удалось очистить историю запросов"
  },
  "firebase": {
    "signUpError": "Не удалось зарегистрироваться. Пожалуйста, повторите попытку позднее",
    "signInError": "Не удалось войти. Пожалуйста, повторите попытку позднее",
    "logOutError": "Не удалось выйти из аккаунта. Пожалуйста, повторите попытку позднее"
  }
}
